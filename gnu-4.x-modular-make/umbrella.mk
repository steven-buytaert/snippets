# Copyright 2020-2023 Steven Buytaert

# $ make;make --directory .. UMBFLAGS=debug

$(info Included driver $(filter %umbrella.mk,$(MAKEFILE_LIST)))

# The build driver, included by the top level Makefile

# Prefer to load the ./tools/umbrella.so (under development probably) in
# stead of the globally available umbrella.so.

UMBMOD := $(shell echo $(HOME))/.local/lib/umbrella.so

MOD2LOAD := $(if $(wildcard ./tools/umbrella.so),./tools/umbrella.so,$(UMBMOD))

#$(info MOD2LOAD=$(MOD2LOAD))

load $(MOD2LOAD)

GENERATED   := # Files that are generated like e.g. from yacc, lex or tool generators
DEPS        := # Files that contain dependencies on headers; auto generated by gcc   
LIB_TARGETS := # Libraries that should be generated
APP_TARGETS := # Applications that should be generated

# Small note on automatic variables
# $@ target
# $< first dependency
# $^ all dependencies
# $? all dependencies more recent than the target
# To have a view on all variables in scope, one can start make with the -p option.

all:    libs apps samples

clean:
	@rm -rf $(BAD) $(GENERATED) $(EXTERN)
	@find . -name \*~ -print | xargs rm -rf
	@echo Cleaned...

.ONESHELL:
$(BAD)/marker:
	@mkdir -p $(BAD)/include
	@mkdir -p $(BAD)/lib
	@mkdir -p $(BAD)/bin
	@mkdir -p $(BAD)/doc
	@touch $(BAD)/marker

obj-setup: $(BAD)/marker
	@mkdir -p $(BAD)/gen

.PHONY: all libs apps samples html lstargets

# Transfer global settings to Umbrella make.

$(globals $(MAKECMDGOALS),$(DIRS),$(BAD),$(shell pwd),$(CFLAGS),$(CXXLAGS),$(LDFLAGS),$(LDLIBS),$(DOCFLAGS),$(CXX),$(CC),$(LD),$(CXXLD),$(TOOLCC),$(TOOLLD),$(TOOLCXX),$(UMBFLAGS))

DEPS :=

define READMod

$$(setvars $(1))

include $(1)/Rules.mk

$$(module $(1),$$(GEN),$$(LIBNAME),$$(EXPORTS),$$(APPNAME),$$(IMPORTS),$$(SAMPLE),$$(SOURCES),$$(SRC),$$(CFLAGS),$$(CXXFLAGS),$$(LDFLAGS),$$(DOCTEXT),$$(DOCFLAGS),$$(ASFLAGS),$$(GENERATED),$$(TOOLNAME))

endef

$(foreach FOLDER,$(DIRS),$(eval $(call READMod,$(FOLDER))))

$(genmod $(HOME))

#
# The generic targets
#

html: $(BAD)/marker $(HTML_TARGETS)
pdf:  html          $(PDF_TARGETS)
libs: $(BAD)/marker $(LIB_TARGETS)
apps: libs          $(APP_TARGETS)
samples: libs       $(SAMPLE_TARGETS)

# Include all dependencies, will be redone when the dependencies are out of date or regenerated

#$(info DEPS=$(DEPS))

-include $(DEPS)

